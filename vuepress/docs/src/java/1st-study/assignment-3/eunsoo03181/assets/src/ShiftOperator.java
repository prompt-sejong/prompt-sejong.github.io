package WEEK03;

public class ShiftOperator {
    public static void main(String[] args) {
        int p1 = 0b1100; // 10진수로 12입니다.
        int p2 = -8; //2진수로 11111111 11111111 11111111 11111000 입니다.

        // 정수 12의 각 비트를 2만큼 왼쪽으로 이동시킵니다. 빈칸은 0으로 채웁니다.
        System.out.println("p1 << 2 = " + (p1 << 2));
        // 00000000 ... 00110000 이므로, 48이 출력됩니다.

        // 정수 -8의 각 비트를 2만큼 오른쪽으로 이동시킵니다. 최상위 부호비트와 같은 값으로 채웁니다.
        System.out.println("p2 >> 2 = " + (p2 >> 2));
        // 11111111 11111111 11111111 11111110 이므로, -2가 출력됩니다.

        // 정수 -8의 각 비트를 2만큼 오른쪽으로 이동시킵니다. 빈칸은 0으로 채웁니다.
        System.out.println("p2 >>> 2 = " + (p2 >>> 2));
        // 00111111 11111111 11111111 11111110 이므로, 1073741822가 출력됩니다.
    }
}
