(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{306:function(t,a,s){t.exports=s.p+"assets/img/mainThread.fc1a26bb.png"},492:function(t,a,s){"use strict";s.r(a);var n=s(14),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"자바-스터디-10주차"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#자바-스터디-10주차"}},[t._v("#")]),t._v(" 자바 스터디 - 10주차")]),t._v(" "),a("h1",{attrs:{id:"_1-thread-클래스와-runnable-인터페이스"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-thread-클래스와-runnable-인터페이스"}},[t._v("#")]),t._v(" 1. "),a("a",{attrs:{href:"https://mangkyu.tistory.com/258",target:"_blank",rel:"noopener noreferrer"}},[t._v("Thread 클래스와 Runnable 인터페이스"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"_1-1-thread-클래스"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-thread-클래스"}},[t._v("#")]),t._v(" 1.1. Thread 클래스")]),t._v(" "),a("p",[t._v("쓰레드 생성을 위해 java에서 미리 구현해둔 클래스이다. 다음과 같은 메소드를 가지고 있다.")]),t._v(" "),a("ul",[a("li",[t._v("sleep\n"),a("ul",[a("li",[t._v("현재 쓰레드 정지")]),t._v(" "),a("li",[t._v("자원의 해제 없이 제어권을 넘겨주므로 데드락 발생 가능")])])]),t._v(" "),a("li",[t._v("interupt\n"),a("ul",[a("li",[t._v("다른 쓰레드를 깨워서 interruptedException을 발생")]),t._v(" "),a("li",[t._v("interupt가 발생한 쓰레드는 예외를 catch하여 다른 작업을 할 수 있음")])])]),t._v(" "),a("li",[t._v("join\n"),a("ul",[a("li",[t._v("다른 쓰레드의 작업이 끝날 때까지 기다림")]),t._v(" "),a("li",[t._v("쓰레드의 순서를 제어할 때 사용")])])])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ThreadExample")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyThread")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyThread")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" threadName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("threadName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Thread: "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("currentThread")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyThread")]),t._v(" th1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyThread")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"first thread"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyThread")]),t._v(" th2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyThread")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"second thread"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        th1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" th2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"_1-2-runnable-인터페이스"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-runnable-인터페이스"}},[t._v("#")]),t._v(" 1.2. Runnable 인터페이스")]),t._v(" "),a("p",[t._v("하나의 메소드만을 갖는 함수형 인터페이스이다. 따라서 람다식으로 사용할 수 있다.")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@FunctionalInterface")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Runnable")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("abstract")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RunnableExample")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyRunnable")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Runnable")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Thread: "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("currentThread")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyRunnable")]),t._v(" r "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyRunnable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),t._v(" th1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("r"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"first thread"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),t._v(" th2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("r"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"second thread"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        th1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" th2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("이는 쓰레드를 사용한 것과 마찬가지로 동시성을 잘 나타내고 있다.")]),t._v(" "),a("h1",{attrs:{id:"_2-쓰레드의-상태"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-쓰레드의-상태"}},[t._v("#")]),t._v(" 2. 쓰레드의 상태")]),t._v(" "),a("ul",[a("li",[t._v("new\n"),a("ul",[a("li",[t._v("쓰레드 객체 생성")]),t._v(" "),a("li",[t._v("start() 메소드가 호출되지 않은 상태")]),t._v(" "),a("li",[t._v("실행 가능한 상태: 0")]),t._v(" "),a("li",[t._v("따라서 new가 0이 아니면 "),a("code",[t._v("IllegalThreadStateException")]),t._v(" 예외를 발생시킴")])])]),t._v(" "),a("li",[t._v("runnable\n"),a("ul",[a("li",[t._v("실행 상태로 언제든지 갈 수 있는 상태")])])]),t._v(" "),a("li",[t._v("waiting\n"),a("ul",[a("li",[t._v("다른 쓰레드가 통지할 때까지 기다리는 상태")])])]),t._v(" "),a("li",[t._v("time waiting\n"),a("ul",[a("li",[t._v("주어진 시간 동안 기다리는 상태")])])]),t._v(" "),a("li",[t._v("blocked\n"),a("ul",[a("li",[t._v("사용하고자 하는 객체의 락이 풀릴 때까지 기다리는 상태")])])]),t._v(" "),a("li",[t._v("terminated\n"),a("ul",[a("li",[t._v("실행을 마친 상태")])])])]),t._v(" "),a("h1",{attrs:{id:"_3-쓰레드의-우선순위"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-쓰레드의-우선순위"}},[t._v("#")]),t._v(" 3. 쓰레드의 우선순위")]),t._v(" "),a("p",[t._v("쓰레드 기본 우선순위 값이 큰 순서대로 먼저 실행된다. 쓰레드의 기본 우선 순위는 5로 설정되며, 최소는 1, 최대는 10이다. 이 값들은 Thread.class에 상수값으로 저장 되어있다.")]),t._v(" "),a("ul",[a("li",[t._v("public static int NORM_PRIORITY")]),t._v(" "),a("li",[t._v("public static int MIN_PRIORITY")]),t._v(" "),a("li",[t._v("public static int MAX_PRIORITY")])]),t._v(" "),a("p",[t._v("자바에서 쓰레드의 우선 순위를 가져오고 설정하는 메소드가 있다.")]),t._v(" "),a("ul",[a("li",[t._v("public final int getPriority()\n"),a("ul",[a("li",[t._v("주어진 쓰레드의 우선 순위를 반환")])])]),t._v(" "),a("li",[t._v("public final void setPriority(int newPriority)\n"),a("ul",[a("li",[t._v("쓰레드의 우선 순위를 newPriority 값으로 변경.")]),t._v(" "),a("li",[t._v("newPriority 값이 1미만, 10초과면 IllegalArgumentException을 발생시킴")])])])]),t._v(" "),a("h1",{attrs:{id:"_4-main-쓰레드"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-main-쓰레드"}},[t._v("#")]),t._v(" 4. "),a("a",{attrs:{href:"https://velog.io/@paki1019/Java-%EB%A9%94%EC%9D%B8-%EC%8A%A4%EB%A0%88%EB%93%9CMain-thread",target:"_blank",rel:"noopener noreferrer"}},[t._v("Main 쓰레드"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("자바는 다중 쓰레드 프로그래밍을 지원한다. 다중 쓰레드는 2개 이상의 쓰레드로 구성되며, 쓰레드는 별도의 실행 경로를 가진다.\n자바 프로그램 시작과 동시에 하나의 쓰레드가 즉시 동작하게 된다. 이를 "),a("code",[t._v("Main Thread")]),t._v("라 한다.")]),t._v(" "),a("p",[t._v("메인 쓰레드는 다음과 같은 속성을 가진다.")]),t._v(" "),a("ul",[a("li",[t._v("메인 쓰레드에서 자식 쓰레드가 생긴다")]),t._v(" "),a("li",[t._v("다양한 종료 작업을 수행하기 때문에 대체로 마지막으로 실행 종료되는 쓰레드여야 함\n"),a("img",{attrs:{src:s(306),alt:"mainThread"}})])]),t._v(" "),a("h2",{attrs:{id:"_4-1-main-쓰레드의-제어"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-main-쓰레드의-제어"}},[t._v("#")]),t._v(" 4.1. main 쓰레드의 제어")]),t._v(" "),a("p",[t._v("자식 쓰레드는 부모 쓰레드의 우선순위를 그대로 상속한다.")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token import"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("io"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token import"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MainThreadExample")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),t._v(" mainThread "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("currentThread")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),t._v(" childThread "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h1",{attrs:{id:"_5-동기화"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-동기화"}},[t._v("#")]),t._v(" 5. 동기화")]),t._v(" "),a("p",[t._v("쓰레드를 동기화하지 않으면 같은 공유 자원에 접근할 때 예상하지 못한 일이 발생할 수 있다. 따라서 동기화를 해주어야 해당 문제가 해결된다.")]),t._v(" "),a("p",[t._v("쓰레드를 동기화하기 위해서는 Critical section(임계 영역)과 Lock(락)의 개념이 필요하다.")]),t._v(" "),a("ul",[a("li",[t._v("Critical section\n"),a("ul",[a("li",[t._v("둘 이상의 쓰레드가 동시에 접근해서는 안되는 코드의 영역")])])]),t._v(" "),a("li",[t._v("Lock\n"),a("ul",[a("li",[t._v("임계 영역을 포함하고 있는 객체에 접근할 수 있는 권한")])])])]),t._v(" "),a("h2",{attrs:{id:"synchronized-keyword"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#synchronized-keyword"}},[t._v("#")]),t._v(" synchronized keyword")]),t._v(" "),a("p",[t._v("임계 영역으로 지정할 메소드의 반환 타입 앞에 입력하여 메소드 전체를 Critical section으로 설정할 수 있다. 설정한 메소드가 호출되면, 메소드가 포함된 객체의 Lock을 얻으며, Lock을 반납하기 전까지 다른 쓰레드는 해당 메소드를 실행하지 못한다.")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("synchronized")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("threadExample")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// do something")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("멀티 쓰레딩 시 Critical section은 성능을 좌우하기 때문에 가능하면 메소드 전체에 락을 거는 것보다 블럭으로 임계영역을 최소화해서 효율적인 프로그램을 작성하는 것을 추천.")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("threadExample")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("synchronized")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// do something")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"wait-notify-notifyall"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#wait-notify-notifyall"}},[t._v("#")]),t._v(" wait(), notify(), notifyAll()")]),t._v(" "),a("p",[t._v("wait 메소드는 Object의 인스턴스 메소드이다. 따라서 어떤 객체에서도 호출이 가능하지만, 오직 synchronized 블록 내에서만 호출이 가능하다. 그렇지 않으면 에러를 발생시킨다.")]),t._v(" "),a("p",[t._v("wait() 메소드의 기능은 객체에 대한 lock을 release 하는 것이다.")]),t._v(" "),a("p",[t._v("wait()을 걸게 되면 Lock을 release하고 WAITING, TIMED_WAITING 상태로 바뀌게 된다. 이는 Non-Runnable 영역이다.")]),t._v(" "),a("p",[t._v("wait() 상태로 들어간 쓰레드는 notify() 혹은 notifyAll() 메소드를 호출함으로써 RUNNABLE 상태로 변경할 수 있다.")]),t._v(" "),a("p",[t._v("TIMED_WAITING 상태의 쓰레드의 경우 wait(1000)과 같이 생성자를 이용하면 된다. 이는 시간이 지나면 자동으로 RUNNABLE 상태로 변경된다.")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://velog.io/@destiny1616/%EC%9E%90%EB%B0%94%EC%9D%98-wait%EC%99%80-notify-%EB%A9%94%EC%84%9C%EB%93%9C",target:"_blank",rel:"noopener noreferrer"}},[t._v("참조 블로그"),a("OutboundLink")],1)]),t._v(" "),a("h1",{attrs:{id:"_6-데드락"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-데드락"}},[t._v("#")]),t._v(" 6. 데드락")]),t._v(" "),a("p",[t._v("데드락의 발생 조건이 있다.")]),t._v(" "),a("ul",[a("li",[t._v("Mutual Exclusion\n"),a("ul",[a("li",[t._v("한 자원에 대해 여러 쓰레드 동시 접근 불가")])])]),t._v(" "),a("li",[t._v("Hold and Wait\n"),a("ul",[a("li",[t._v("자원을 가지고 있는 상태에서 다른 쓰레드가 사용하고 있는 자원 반납을 기다리는 것")])])]),t._v(" "),a("li",[t._v("Non Preemptive\n"),a("ul",[a("li",[t._v("다른 쓰레드의 자원을 실행 중간에 강제로 가져올 수 없음")])])]),t._v(" "),a("li",[t._v("Circle Wait\n"),a("ul",[a("li",[t._v("각 쓰레드가 순환적으로 다음 쓰레드가 요구하는 자원을 가지고 있는 것")])])])]),t._v(" "),a("p",[t._v("만약 데드락이 발생하면 아무런 실행도 하지 못하고 무한정 대기를 한다.")])])}),[],!1,null,null,null);a.default=e.exports}}]);