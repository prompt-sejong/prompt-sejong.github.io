(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{472:function(t,a,s){t.exports=s.p+"assets/img/env.cb3e6e67.png"},473:function(t,a,s){t.exports=s.p+"assets/img/classloader.8e245557.png"},525:function(t,a,s){"use strict";s.r(a);var v=s(14),_=Object(v.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"자바-스터디-7주차"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#자바-스터디-7주차"}},[t._v("#")]),t._v(" 자바 스터디 - 7주차")]),t._v(" "),a("h2",{attrs:{id:"package-키워드"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#package-키워드"}},[t._v("#")]),t._v(" package 키워드")]),t._v(" "),a("p",[a("strong",[t._v("패키지:")]),t._v(" 클래스와 인터페이스의 집합"),a("br"),t._v("\n서로 관련이 있는 클래스나 인터페이스를 함께 묶음으로써 파일을 "),a("strong",[t._v("효율적")]),t._v("으로 관리할 수 있음"),a("br"),t._v("\n협업 시 서로 작업한 클래스 사이에서 발생할 수 있는 이름 충돌 문제도 패키지를 사용하면 해결할 수 있음")]),t._v(" "),a("p",[t._v("자바에서 패키지는 물리적으로 하나의 "),a("strong",[t._v("디렉터리")]),t._v("를 의미함"),a("br"),t._v("\n하나의 패키지에 속한 클래스나 인터페이스 파일은 모두 "),a("strong",[t._v("해당 패키지 이름의 디렉터리에 포함")]),t._v("되어 있음"),a("br"),t._v("\n이러한 패키지는 다른 패키지를 포함할 수 있으며, 이 때 디렉터리의 계층 구조는 **점(.)**으로 구분됨"),a("br"),t._v(" "),a("br")]),t._v(" "),a("p",[t._v("예시:  "),a("code",[t._v("java.lang.String")])]),t._v(" "),a("p",[t._v("패키지 선언: "),a("code",[t._v("package 패키지 이름;")]),a("br"),t._v("\n위와 같은 명령문을 클래스나 인터페이스의 소스 파일에 추가하기만 하면 됨"),a("br"),t._v("\n이때 패키지 이름에는 패키지의 경로까지 포함한 풀 네임을 명시해야 함  "),a("br"),t._v(" "),a("br")]),t._v(" "),a("p",[a("code",[t._v("이름 없는 패키지")]),t._v(": 어떤 패키지의 선언도 포함되지 않으면, 기본적으로 "),a("strong",[t._v("이름 없는 패키지에 포함해 컴파일함")]),a("br"),t._v("\n패키지를 명시하지 않은 모든 클래스와 인터페이스는 모두 같은 패키지에 포함되게 됨"),a("br"),t._v(" "),a("br")]),t._v(" "),a("h2",{attrs:{id:"import-키워드"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#import-키워드"}},[t._v("#")]),t._v(" import 키워드")]),t._v(" "),a("p",[a("strong",[t._v("자바 라이브러리 패키지의 클래스를 사용")]),t._v("하거나"),a("br"),t._v(" "),a("strong",[t._v("사용자의 다른 패키지 안의 클래스를 사용할 때")]),t._v(" "),a("code",[t._v("import")]),t._v(" 명령어를 사용함")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//import를 하지 않았을 때 ")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// java.util.Scanner in = new java.util.Scanner(System.in);")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Scanner")]),t._v(" in "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Scanner")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("in"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("p",[a("code",[t._v("패키지명.*")]),t._v("를 사용하면 해당 패키지의 하위 클래스를 모두 import 할 수 있음"),a("br"),t._v(" "),a("br")]),t._v(" "),a("p",[a("code",[t._v("Ctrl+Shift+O")]),t._v(" 를 사용하면 현재 파일에서 사용하는 모든 클래스의 import문을 자동으로 추가함"),a("br"),t._v(" "),a("code",[t._v("Ctrl+Shift+M")]),t._v(" 를 사용하면 커서 아래에 존재하는 메서드나 변수의 import문을 자동으로 추가함"),a("br"),t._v(" "),a("code",[t._v("ALT+Enter")]),t._v("를 사용하면 커서 아래에 존재하는 클래스나 인터페이스의 import 문을 자동으로 추가함")]),t._v(" "),a("ul",[a("li",[t._v("static import")])]),t._v(" "),a("br"),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" 패키지명"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("클래스명"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("멤버명"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   \n")])])]),a("p",[t._v("다른 클래스의 static 멤버를 현재 클래스에서 "),a("strong",[t._v("직접")]),t._v(" 사용할 수 있음"),a("br"),t._v("\n클래스명을 생략하고 static 멤버의 이름만으로 사용하여 코드의 가독성을 향상시킴")]),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"클래스패스"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#클래스패스"}},[t._v("#")]),t._v(" 클래스패스")]),t._v(" "),a("p",[a("strong",[t._v("클래스 패스:")]),t._v(" 자바가 클래스를 사용하려고 탐색할 때 JVM 혹은 자바 컴파일러가 사용하는 파라미터"),a("br"),t._v("\n==> "),a("strong",[t._v("프로그램을 실행할 때 클래스나 패키지를 찾기 위한 기준이 되는 경로")])]),t._v(" "),a("p",[t._v("만약 클래스 패스를 설정하지 않으면 디폴트는 현재 경로를 바라봄."),a("br"),t._v("\n소스코드를 컴파일하면 바이트코드로 컴파일되고, JVM이 바이트코드로 된 파일을 실행하려면 이 파일을 찾을 수 있어야 하는데, 이때 .class 파일을 찾을 때 classpath에 지정된 경로를 사용함.")]),t._v(" "),a("p",[t._v("class path는 .class 파일이 포함된 디렉토리와 파일을 콜론으로 구분한 목록임"),a("br"),t._v("\njava runtime(JVM)은 이 classpath에 지정된 경로를 모두 검색해서 특정 클래스에 대한 코드가 포함된 .class 파일을 찾음. 찾으려는 클래스 코드가 포함된 .class 파일을 찾으면 첫번째로 찾은 파일을 사용함.")]),t._v(" "),a("br"),t._v(" "),a("p",[t._v("classpath를 지정할 수 있는 방법은 두가지가 있음.")]),t._v(" "),a("p",[t._v("하나는 "),a("code",[t._v("환경변수 CLASSPATH")]),t._v("를 사용하는 것이고,"),a("br"),t._v("\n또 하나는 "),a("code",[t._v("java runtime에 -classpath 플래그")]),t._v("를 사용하는 것")]),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"classpath-환경변수"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#classpath-환경변수"}},[t._v("#")]),t._v(" CLASSPATH 환경변수")]),t._v(" "),a("p",[a("strong",[t._v("환경변수:")]),t._v(" 운영체제에서 자식 프로세스들을 생성할 때 참조하는 변수"),a("br"),t._v("\n프로세스가 컴퓨터에서 동작하는 방식에 영향을 미치는 동적인 값들을 모아둠"),a("br"),t._v("\nJVM 기반의 애플리케이션도 이 "),a("strong",[t._v("환경변수 값을 참고")]),t._v("해서 동작함")]),t._v(" "),a("p",[t._v("이 값을 지정하면 실행할 때마다 -classpath 옵션을 사용하지 않아도 됨"),a("br"),t._v("\n그러나 운영체제를 변경하면 클래스 패스가 유지되지 않고 사라지기 때문에 이식성 측면에서는 좋지 않음")]),t._v(" "),a("p",[t._v("컴파일된 바이트 코드를 클래스 로더가 클래스 로딩 단계에서 "),a("strong",[t._v("CLASSPATH라는 환경변수에 있는 경로들을 참조")]),t._v("하여 로딩함."),a("br"),t._v(" "),a("br")]),t._v(" "),a("p",[a("img",{attrs:{src:s(472),alt:""}})]),t._v(" "),a("p",[t._v("ㄴ "),a("strong",[t._v("클래스 로더 시스템:")]),t._v(" 자바 바이트 코드를 읽어서 JVM의 실행 엔진이 사용할 수 있도록 Runtime Data Area의 메서드 영역에 적재하는 역할을 함")]),t._v(" "),a("p",[t._v("클래스 파일이 JVM에 로드될 때 가장 먼저 클래스 로더를 거쳐감"),a("br"),t._v(" "),a("br")]),t._v(" "),a("p",[a("img",{attrs:{src:s(473),alt:""}})]),t._v(" "),a("h2",{attrs:{id:"classpath-옵션"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#classpath-옵션"}},[t._v("#")]),t._v(" -classpath 옵션")]),t._v(" "),a("p",[a("code",[t._v("javac <options> <source files>")]),t._v("\n컴파일러가 컴파일 하기 위해 필요로 하는 참조할 클래스 파일들을 찾기 위해서 파일 경로를 지정해주는 옵션")]),t._v(" "),a("p",[a("code",[t._v("javac -classpath [필요한 클래스 파일이 위치한 경로] [실행할 소스코드 경로 포함 파일명]")])]),t._v(" "),a("p",[t._v("만약 참조할 클래스 파일들이 여러개라면 세미콜론으로 구분하여 기입이 가능함"),a("br"),t._v("\n-classpath 옵션을 사용하지 않을 경우 클래스 파일이 위치한 현재 디렉토리를 기본 클래스 패스로 잡아줌\n-classpath 옵션은 java(런타임)과 javac(컴파일 타임) 명령어에 모두 사용이 가능함")]),t._v(" "),a("ul",[a("li",[t._v("런타임 (소스코드->기계어 번역과정), 컴파일 타임(코드가 실제로 실행되는 과정)"),a("br"),t._v(" "),a("br")])]),t._v(" "),a("h2",{attrs:{id:"접근지시자"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#접근지시자"}},[t._v("#")]),t._v(" 접근지시자")]),t._v(" "),a("p",[t._v("자바에서의 접근 지시자는 클래스, 변수, 메서드 등의 접근 가능 범위를 지정함.")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("public:")]),t._v(" 어떤 클래스에서도 접근 가능")]),t._v(" "),a("li",[a("code",[t._v("protected:")]),t._v(" 같은 패키지 내의 클래스 또는 자식 클래스에서만 접근 가능")]),t._v(" "),a("li",[a("code",[t._v("default(package-private):")]),t._v(" 접근 제한자를 명시하지 않았을 경우, 같은 패키지에서는 제한 없이 호출될 수 있지만 다른 패키지에서는 호출할 수 없음")]),t._v(" "),a("li",[a("code",[t._v("private:")]),t._v(" 같은 패키지 내의 클래스에서만 접근 가능")])]),t._v(" "),a("br"),t._v(" "),a("p",[t._v("class, method, field 등을 접근 지시자로 접근 가능 범위를 지정할 수 있음"),a("br"),t._v("\n접근 제한을 통해 "),a("code",[t._v("캡슐화")]),t._v("를 구현할 수 있음! => 데이터 보호, 무분별적인 접근 제한")]),t._v(" "),a("br"),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("접근 지시자")]),t._v(" "),a("th",[t._v("같은 클래스")]),t._v(" "),a("th",[t._v("같은 패키지")]),t._v(" "),a("th",[t._v("자식 클래스")]),t._v(" "),a("th",[t._v("전체")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("public")]),t._v(" "),a("td",[t._v("가능")]),t._v(" "),a("td",[t._v("가능")]),t._v(" "),a("td",[t._v("가능")]),t._v(" "),a("td",[t._v("가능")])]),t._v(" "),a("tr",[a("td",[t._v("protected")]),t._v(" "),a("td",[t._v("가능")]),t._v(" "),a("td",[t._v("가능")]),t._v(" "),a("td",[t._v("가능")]),t._v(" "),a("td",[t._v("불가능")])]),t._v(" "),a("tr",[a("td",[t._v("default(package-private)")]),t._v(" "),a("td",[t._v("가능")]),t._v(" "),a("td",[t._v("가능")]),t._v(" "),a("td",[t._v("불가능")]),t._v(" "),a("td",[t._v("불가능")])]),t._v(" "),a("tr",[a("td",[t._v("private")]),t._v(" "),a("td",[t._v("가능")]),t._v(" "),a("td",[t._v("불가능")]),t._v(" "),a("td",[t._v("불가능")]),t._v(" "),a("td",[t._v("불가능")])])])]),t._v(" "),a("h2",{attrs:{id:"구현-과제-optional"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#구현-과제-optional"}},[t._v("#")]),t._v(" 구현 과제 (Optional)")]),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"추후-구현-예정"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#추후-구현-예정"}},[t._v("#")]),t._v(" 추후 구현 예정 ....")]),t._v(" "),a("br"),t._v(" "),a("ol",[a("li",[a("p",[t._v("LinkedList를 구현하세요."),a("br"),t._v("\nLinkedList에 대해 공부하세요."),a("br"),t._v("\n정수를 저장하는 ListNode 클래스를 구현하세요."),a("br"),t._v("\nListNode add(ListNode head, ListNode nodeToAdd, int position)를 구현하세요."),a("br"),t._v("\nListNode remove(ListNode head, int positionToRemove)를 구현하세요."),a("br"),t._v("\nboolean contains(ListNode head, ListNode nodeTocheck)를 구현하세요."),a("br"),t._v(" "),a("br")])]),t._v(" "),a("li",[a("p",[t._v("Stack을 구현하세요.")]),t._v(" "),a("p",[t._v("int 배열을 사용해서 정수를 저장하는 Stack을 구현하세요."),a("br"),t._v("\nvoid push(int data)를 구현하세요."),a("br"),t._v("\nint pop()을 구현하세요."),a("br"),t._v("\n앞서 만든 ListNode를 사용해서 Stack을 구현하세요."),a("br"),t._v("\nListNode head를 가지고 있는 ListNodeStack 클래스를 구현하세요."),a("br"),t._v("\nvoid push(int data)를 구현하세요."),a("br"),t._v("\nint pop()을 구현하세요.")])])])])}),[],!1,null,null,null);a.default=_.exports}}]);